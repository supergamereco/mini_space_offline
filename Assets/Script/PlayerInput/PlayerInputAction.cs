//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Script/PlayerInput/PlayerInputAction.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputAction : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputAction()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputAction"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""45bb5f0b-27f5-446e-b586-ae3bc2bf60d7"",
            ""actions"": [
                {
                    ""name"": ""Special Weapon"",
                    ""type"": ""Button"",
                    ""id"": ""2bbd09a9-57cf-430d-ab3e-0bf8a75253b8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""98a5cddc-e802-41c0-975b-6930984f96c8"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MovementArrow"",
                    ""type"": ""Value"",
                    ""id"": ""2a14693c-57c5-4db8-b8a8-e6e07a36e363"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""dd24ab27-6695-4044-9ab4-c54f7cedbc93"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""f29361e1-64d7-45f1-855e-4c7befe48016"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Special Weapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""5bebb5c0-15c9-4fa4-befc-b8f033cf82d3"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""fd320c02-4159-45b7-a3ab-b21da0e07dc6"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""761d1319-30c2-4a39-87a7-f89943d3f63a"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""beb00658-716a-4bd3-8d16-36b73b2e2397"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""acdfe4d0-1361-425c-b56f-fc7ea3bd69ec"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""b6712dc2-bbf6-4db3-af26-7006b69564f8"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""eaa4b319-e02b-4383-9eb1-1b12196e36d6"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementArrow"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f22e1a71-a375-4f6f-9e95-c163d9085420"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""8281ef09-18ca-4d14-be29-cef78808c88c"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""2217ef97-92ae-4d12-af09-9c0676f95c7b"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""83fea31f-2d99-4a14-aa5a-8091a34454ba"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""Mainmenu"",
            ""id"": ""aaf73336-93ee-4fc8-911b-41e1f492437b"",
            ""actions"": [
                {
                    ""name"": ""LogIn_Input_Tab"",
                    ""type"": ""Button"",
                    ""id"": ""3417a041-e941-49d7-9348-d02eaa6b4d2b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Login_Input_Enter"",
                    ""type"": ""Button"",
                    ""id"": ""299a21d9-8c7a-4fa5-90db-0d632eb9e376"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""20f50232-a582-4fe2-863b-1404ffea3bb4"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LogIn_Input_Tab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7141490d-70e0-4861-b790-c67d66372cc5"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Login_Input_Enter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_SpecialWeapon = m_Player.FindAction("Special Weapon", throwIfNotFound: true);
        m_Player_Movement = m_Player.FindAction("Movement", throwIfNotFound: true);
        m_Player_MovementArrow = m_Player.FindAction("MovementArrow", throwIfNotFound: true);
        m_Player_Pause = m_Player.FindAction("Pause", throwIfNotFound: true);
        // Mainmenu
        m_Mainmenu = asset.FindActionMap("Mainmenu", throwIfNotFound: true);
        m_Mainmenu_LogIn_Input_Tab = m_Mainmenu.FindAction("LogIn_Input_Tab", throwIfNotFound: true);
        m_Mainmenu_Login_Input_Enter = m_Mainmenu.FindAction("Login_Input_Enter", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_SpecialWeapon;
    private readonly InputAction m_Player_Movement;
    private readonly InputAction m_Player_MovementArrow;
    private readonly InputAction m_Player_Pause;
    public struct PlayerActions
    {
        private @PlayerInputAction m_Wrapper;
        public PlayerActions(@PlayerInputAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @SpecialWeapon => m_Wrapper.m_Player_SpecialWeapon;
        public InputAction @Movement => m_Wrapper.m_Player_Movement;
        public InputAction @MovementArrow => m_Wrapper.m_Player_MovementArrow;
        public InputAction @Pause => m_Wrapper.m_Player_Pause;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @SpecialWeapon.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSpecialWeapon;
                @SpecialWeapon.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSpecialWeapon;
                @SpecialWeapon.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSpecialWeapon;
                @Movement.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                @MovementArrow.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovementArrow;
                @MovementArrow.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovementArrow;
                @MovementArrow.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovementArrow;
                @Pause.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPause;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @SpecialWeapon.started += instance.OnSpecialWeapon;
                @SpecialWeapon.performed += instance.OnSpecialWeapon;
                @SpecialWeapon.canceled += instance.OnSpecialWeapon;
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @MovementArrow.started += instance.OnMovementArrow;
                @MovementArrow.performed += instance.OnMovementArrow;
                @MovementArrow.canceled += instance.OnMovementArrow;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // Mainmenu
    private readonly InputActionMap m_Mainmenu;
    private IMainmenuActions m_MainmenuActionsCallbackInterface;
    private readonly InputAction m_Mainmenu_LogIn_Input_Tab;
    private readonly InputAction m_Mainmenu_Login_Input_Enter;
    public struct MainmenuActions
    {
        private @PlayerInputAction m_Wrapper;
        public MainmenuActions(@PlayerInputAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @LogIn_Input_Tab => m_Wrapper.m_Mainmenu_LogIn_Input_Tab;
        public InputAction @Login_Input_Enter => m_Wrapper.m_Mainmenu_Login_Input_Enter;
        public InputActionMap Get() { return m_Wrapper.m_Mainmenu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MainmenuActions set) { return set.Get(); }
        public void SetCallbacks(IMainmenuActions instance)
        {
            if (m_Wrapper.m_MainmenuActionsCallbackInterface != null)
            {
                @LogIn_Input_Tab.started -= m_Wrapper.m_MainmenuActionsCallbackInterface.OnLogIn_Input_Tab;
                @LogIn_Input_Tab.performed -= m_Wrapper.m_MainmenuActionsCallbackInterface.OnLogIn_Input_Tab;
                @LogIn_Input_Tab.canceled -= m_Wrapper.m_MainmenuActionsCallbackInterface.OnLogIn_Input_Tab;
                @Login_Input_Enter.started -= m_Wrapper.m_MainmenuActionsCallbackInterface.OnLogin_Input_Enter;
                @Login_Input_Enter.performed -= m_Wrapper.m_MainmenuActionsCallbackInterface.OnLogin_Input_Enter;
                @Login_Input_Enter.canceled -= m_Wrapper.m_MainmenuActionsCallbackInterface.OnLogin_Input_Enter;
            }
            m_Wrapper.m_MainmenuActionsCallbackInterface = instance;
            if (instance != null)
            {
                @LogIn_Input_Tab.started += instance.OnLogIn_Input_Tab;
                @LogIn_Input_Tab.performed += instance.OnLogIn_Input_Tab;
                @LogIn_Input_Tab.canceled += instance.OnLogIn_Input_Tab;
                @Login_Input_Enter.started += instance.OnLogin_Input_Enter;
                @Login_Input_Enter.performed += instance.OnLogin_Input_Enter;
                @Login_Input_Enter.canceled += instance.OnLogin_Input_Enter;
            }
        }
    }
    public MainmenuActions @Mainmenu => new MainmenuActions(this);
    public interface IPlayerActions
    {
        void OnSpecialWeapon(InputAction.CallbackContext context);
        void OnMovement(InputAction.CallbackContext context);
        void OnMovementArrow(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
    }
    public interface IMainmenuActions
    {
        void OnLogIn_Input_Tab(InputAction.CallbackContext context);
        void OnLogin_Input_Enter(InputAction.CallbackContext context);
    }
}
